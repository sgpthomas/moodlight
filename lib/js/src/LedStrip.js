// Generated by BUCKLESCRIPT VERSION 4.0.0, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Pixel = require("./Pixel.js");
var React = require("react");
var Pervasives = require("bs-platform/lib/js/pervasives.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");

var component = ReasonReact.reducerComponent("LedStrip");

var idRef = /* record */[/* contents */-1];

function nextPixel(size) {
  idRef[0] = idRef[0] + 1 | 0;
  return /* record */[
          /* id */idRef[0],
          /* size */size,
          /* color : record */[
            /* r */0,
            /* g */0,
            /* b */0
          ]
        ];
}

function makePixels(num, size) {
  if (num !== 0) {
    if (num < 0) {
      return Pervasives.failwith("Need a positive size");
    } else {
      return /* :: */[
              nextPixel(size),
              makePixels(num - 1 | 0, size)
            ];
    }
  } else {
    return /* [] */0;
  }
}

function test(i, t) {
  return (i + t | 0) % 255 / 255;
}

function sumList(i, t, fList) {
  return List.fold_left((function (acc, f) {
                return Curry._2(f, i, t) + acc;
              }), 0, fList);
}

function make(num, size, time, funs, _) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */(function () {
              idRef[0] = -1;
              return /* record */[/* pixels */makePixels(num, size)];
            }),
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (self) {
              return React.createElement("div", {
                          id: "ledstrip"
                        }, $$Array.of_list(List.map((function (pixel) {
                                    return ReasonReact.element(String(pixel[/* id */0]), undefined, Pixel.make(pixel[/* size */1], pixel[/* color */2], /* array */[]));
                                  }), List.mapi((function (i, pix) {
                                        return /* record */[
                                                /* id */pix[/* id */0],
                                                /* size */pix[/* size */1],
                                                /* color : record */[
                                                  /* r */sumList(i, time, funs[/* red */0]),
                                                  /* g */sumList(i, time, funs[/* green */1]),
                                                  /* b */sumList(i, time, funs[/* blue */2])
                                                ]
                                              ];
                                      }), self[/* state */1][/* pixels */0]))));
            }),
          /* initialState */(function () {
              return /* record */[/* pixels */makePixels(num, size)];
            }),
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */(function (_, _$1) {
              return /* NoUpdate */0;
            }),
          /* subscriptions */component[/* subscriptions */13],
          /* jsElementWrapped */component[/* jsElementWrapped */14]
        ];
}

exports.component = component;
exports.idRef = idRef;
exports.nextPixel = nextPixel;
exports.makePixels = makePixels;
exports.test = test;
exports.sumList = sumList;
exports.make = make;
/* component Not a pure module */
